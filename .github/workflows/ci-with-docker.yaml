name: Java CI with Gradle and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

#    services:
#      # Docker 데몬 서비스 설정
#      docker:
#        image: docker:dind
#        privileged: true
#        options: >-
#          --health-cmd "docker info"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Testcontainers를 위한 Docker 설정
#      - name: Setup Docker for Testcontainers
#        run: |
#          echo "Setting up Docker for Testcontainers..."
#          docker info
#
#      - name: Build and Test with Gradle
#        run: ./gradlew test
#        env:
#          # Testcontainers 환경 변수 설정
#          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
#          DOCKER_HOST: unix:///var/run/docker.sock

      # Gradle 빌드 및 테스트 단계 추가
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hot-deal-dev:latest .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hot-deal-dev:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hot-deal-dev:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/hot-deal-dev:${{ github.sha }}
